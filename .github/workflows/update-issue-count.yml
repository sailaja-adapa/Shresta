name: Update Issue Count

on:
  schedule:
    - cron: '0 * * * *'  # Runs every hour
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger

jobs:
  update_issue_count:
    permissions:
      contents: write
      issues: read 
    runs-on: ubuntu-latest

    env:
      REPO: "sailaja-adapa/Shresta"  # Set the original repository

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure Git User
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
      
      - name: Get Open Issues Count
        run: |
          echo "OPEN_ISSUE_COUNT=$(gh issue list --repo $REPO --state open --json number --jq 'length')" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Closed Issues Count
        run: |
          echo "CLOSED_ISSUE_COUNT=$(gh issue list --repo $REPO --state closed --json number --jq 'length')" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Calculate Total Issues
        run: |
          TOTAL_ISSUE_COUNT=$((OPEN_ISSUE_COUNT + CLOSED_ISSUE_COUNT))
          echo "TOTAL_ISSUE_COUNT=$TOTAL_ISSUE_COUNT" >> $GITHUB_ENV
          echo "Final Total Issues: $TOTAL_ISSUE_COUNT"

      - name: Create JSON File
        run: |
          echo "Using Total Issues: $TOTAL_ISSUE_COUNT"
          rm -f issue-count.json  # Ensure old file is removed
          echo '{ "schemaVersion": 1, "label": "Total Issues", "message": "'"$TOTAL_ISSUE_COUNT"'", "color": "red" }' > issue-count.json
          cat issue-count.json 

      - name: Check Staged Files Before Commit
        run: |
          git status
          git diff issue-count.json


      - name: Reset any unstaged changes before pulling
        run: |
          git reset --hard HEAD  # Discards any unstaged changes
          git clean -fd  # Removes untracked files
          git pull --rebase origin main || echo "No changes to pull"
     
      - name: Commit and push changes
        run: |
          git add -f issue-count.json
          git commit -m "Update issue count to $TOTAL_ISSUE_COUNT" || echo "No changes to commit"
          git push --force origin main  # Force push to avoid conflicts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug JSON File
        run: cat issue-count.json

      - name: Debug Variables
        run: |
          echo "OPEN_ISSUE_COUNT: $OPEN_ISSUE_COUNT"
          echo "CLOSED_ISSUE_COUNT: $CLOSED_ISSUE_COUNT"
          echo "TOTAL_ISSUE_COUNT: $TOTAL_ISSUE_COUNT"

      - name: Debug GitHub Repository Variable
        run: |
          echo "Using Repository: $REPO"

      - name: Debug Issue Count
        run: |
          echo "TOTAL_ISSUES=$(( $(gh issue list --repo $REPO --state open --json number --jq 'length') + $(gh issue list --repo $REPO --state closed --json number --jq 'length') ))"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
